syntax = "proto3";
option go_package = "proxy";

service ExpenseService {
    rpc GetExpense (ExpenseIDRequest) returns (ExpenseResponse) {}
    rpc CreateExpense (CreateExpenseRequest) returns (ExpenseResponse) {}
    rpc UpdateExpense (UpdateExpenseRequest) returns (ExpenseResponse) {}
    rpc RemoveExpense (ExpenseIDRequest) returns (EmptyResponse) {}
    rpc GetUserExpenses (UserPagingRequest) returns (ExpensesResponse) {}

    rpc GetCategory (CategoryIDRequest) returns (CategoryResponse) {}
    rpc CreateCategory (CreateCategoryRequest) returns (CategoryResponse) {}
    rpc UpdateCategory (UpdateCategoryRequest) returns (CategoryResponse) {}
    rpc RemoveCategory (CategoryIDRequest) returns (EmptyResponse) {}    
    rpc GetUserCategories (UserPagingRequest) returns (CategoriesResponse) {}
}

message UserPagingRequest {
    string UserID = 1;
    int32 Offset = 2;
    int32 Limit = 3;
}

message ExpensesResponse {
    repeated ExpenseResponse Expenses = 1;
}

message CategoriesResponse {
    repeated CategoryResponse Categories = 1;
}

message CreateExpenseRequest {
	int64 Date = 1;
    float Value = 2;
	string CategoryID = 3;
	string UserID = 4;	
}

message UpdateExpenseRequest {
    string ID = 1;
	int64 Date = 2;
    float Value = 3;
	string CategoryID = 4;
	string UserID = 5;	
}

message ExpenseResponse {
    string ID = 1;
	int64 Date = 2;
    float Value = 3;
	string CategoryID = 4;
}

message ExpenseIDRequest {
    string ID = 1;    
}

message CreateCategoryRequest {
	float Limit = 1;
	string Name = 2;
    string UserID = 3;
}

message UpdateCategoryRequest {
    string ID = 1;
	float Limit = 2;
	string Name = 3;
    string UserID = 4;
}

message CategoryResponse {
    string ID = 1;
	float Limit = 2;
	string Name = 3;
}

message CategoryIDRequest {
    string ID = 1;    
}

message EmptyResponse {
}